---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Pagination from "@components/Pagination.astro";
import Card from "@components/Card";
import { SITE } from "@config";
import { defaultLocale, type Locale } from "@i18n/config";
import { messages } from "@i18n/dict";

export interface Props {
  currentPage: number;
  totalPages: number;
  paginatedPosts: CollectionEntry<"blog">[];
  lang?: Locale;
}

// Respect explicitly provided lang; otherwise infer from URL prefix
const { currentPage, totalPages, paginatedPosts } = Astro.props;
const passedLang = (Astro.props as any).lang as Locale | undefined;
const lang: Locale =
  passedLang ??
  (Astro.url.pathname.startsWith("/zh-hant/") ? "zh-hant" : defaultLocale);
const t = messages[lang];
const base = lang === "zh-hant" ? "/zh-hant" : "";
const canonical = new URL(Astro.url.pathname, Astro.site).href;
---

<Layout
  title={`${t.nav.posts} | ${SITE.title}`}
  lang={lang}
  alternates={{
    en: base
      ? new URL(Astro.url.pathname.replace(/^\/zh-hant/, ""), Astro.site).href
      : canonical,
    "zh-hant": base
      ? canonical
      : new URL(`/zh-hant${Astro.url.pathname}`, Astro.site).href,
  }}
>
  <Header activeNav="posts" {lang} />
  <Main
    pageTitle={t.nav.posts}
    pageDesc={lang === "zh-hant"
      ? "我發佈的所有文章。"
      : "All the articles I've posted."}
  >
    <ul>
      {
        paginatedPosts.map(({ data, slug }) => {
          const s = (data as any).baseSlug ?? slug;
          return <Card href={`${base}/posts/${s}/`} frontmatter={data} />;
        })
      }
    </ul>
  </Main>

  <Pagination
    {currentPage}
    {totalPages}
    prevUrl={`${base}/posts${currentPage - 1 !== 1 ? "/" + (currentPage - 1) : ""}/`}
    nextUrl={`${base}/posts/${currentPage + 1}/`}
  />

  <Footer noMarginTop={totalPages > 1} />
</Layout>
